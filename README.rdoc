= Rimpact

== Description

Rimpact allows your Ruby on Rails application to parse bibliographic data in {RIS format}[http://en.wikipedia.org/wiki/RIS_(file_format)] and generate {d3.js}[http://d3js.org/] based visualization graphs.


== Configuring your Rails application

Take the following steps to configure your Rails application to use Rimpact.

Add the following lines to the +Gemfile+:
  gem 'gnlookup', :git => 'https://github.com/lw292/gnlookup.git'
  gem 'rimpact', :git => 'https://github.com/lw292/rimpact.git'

At this point, if you are running Rails 4.x, you will need this line too in the +Gemfile+:
  gem 'protected_attributes'

Then use the +bundle+ command to install the gems and their dependencies:
  bundle install

You will need to create some required files and directories in your application. You can do so by running:
  rake rimpact:setup

This will create the following empty directories and files (if they do not already exist):
  public/data
  public/external
  public/results
  public/preferred
  public/preferred/cities.csv
  public/preferred/regions.csv


== Getting RIS data

Rimpact has been tested to work with the RIS data exported from the Scopus database. Most other bibliographic databases, such as PubMed, OvidSP, and the Web of Science, will export data to citation management applications, such as EndNote and RefWorks, even if they do not directly export to a format that Rimpact can work with. You can then use these citation management applications to export the data again to the RIS format, which Rimpact can work with.


=== Scopus

1. Go to the {Scopus}[http://www.scopus.com/] site. If you do not have access, please contact your librarian.
2. Run your search to get a result set.
3. Select the references you would like to export.
4. Click on the "Export" icon.
5. In the popup, choose RIS format.
6. In the dropdown, choose "Specify fields to be exported". Then select fields. Normally you would choose all fields under "Citation information" and "Abstract and Keywords" as well as the "Affiliations" field under "Bibliographical information". Please note that the "Source and Document Type" field under "Citation information" is REQUIRED for Rimpact to work.
7. Click "Export", and the data will be downloaded to your computer.
8. To make things easier, you can copy the downloaded data file to your application's +public/data+ directory. Rename it if you wish. Typically, you would end up having a file like this:
  public/data/data.txt

=== Citation Management Applications

==== EndNote

1. Select the references you wish to export.
2. Go to "File", "Export".
3. Navigate to a place where you wish to save the exported file, and choose a file name.
4. In Output Style, choose "RefMan (RIS) Export".
5. Click "Save".
6. Move the exported file to your application's "public/data" directory.

==== RefWorks

1. Select the references you wish to export.
2. Go to "References", "Export".
3. At "Select an export format", choose "Bibliographic Software".
4. Click "Export References".
5. Move the exported file to your application's "public/data" directory.

== Cleaning the reference data

Your visualization is only as good as the integrity of your data. The data you downloaded from online databases unfortunately is very likely to contain errors and inconsistencies. You should use a tool such as EndNote, RefWorks, or Microsoft Excel to clean up your data. Here are some common problems with referece data.

=== Ambiguous author names

Coming soon ...

=== Multiple field values

Coming soon...

=== Inconsistent spellings

Coming soon...

=== Duplicate references

Coming soon...

== Recipes

You can now use Rimpact to generate visualization graphs from the RIS data. The algorithms for generating visualization graphs are encapsulated as "recipes" under the +lib/recipes+ directory. At this point, only two recipes are included. Each recipe has its own rake tasks. To see what tasks are available, run the following command and look for tasks that start with "rimpact":
  rake -T

You can create your own custom recipes following the example of the included recipes. If you would like to contribute your recipes to us, please let us know so that we can add them to Rimpact.

==== The authors recipe

The +authors+ recipe generates {force-directed graphs}[http://en.wikipedia.org/wiki/Force-directed_graph_drawing] of author collaboration networks. To do that, run:
  rake rimpact:authors:create

This will parse your RIS data file, extract the author fields, calculate the number of collaborators and publications for each author, and generate the html, JavaScript and data required to display the force-directed graph.

All generated files will be saved to the path you specify when you run the task. Typically, if you follow the conventions, you would end up having this directory in your +public/results+ directory:
  public/results/your_project_name/authors

The directory is a self contained system. You can drop it on to any web server, and point your browser to the +index.html+ file to view it. If you want to use your Rails application to view it, start your Rails server, and point your browser to:
  http://your_rails_server_root_url/results/your_project_name/authors/index.html

==== The geo recipe

The +geo+ recipe generates graphs of geographical collaboration networks.

===== Setting up Gnlookup

The +geo+ recipe relies on a database from which latitudes and longitudes of cities can be retrieved. The Gnlookup gem will provide that function. Please follow {this guide}[https://github.com/lw292/gnlookup] to set it up for your Rails application.

===== Getting map data

In order for the browser to display maps, you will need map shape data for the United States and the world in {geojson format}[http://en.wikipedia.org/wiki/GeoJSON]. Please follow {this guide}[http://chimera.labs.oreilly.com/books/1230000000345/ch12.html#_acquiring_and_parsing_geodata] to generate these data files and place them in the +public/external+ directory. You should end up having these files:
  public/external/geo/us.json
  public/external/geo/world.json

===== Using the geo recipe

To create a graph of geographical collaboration networks from the RIS data, run:
  rake rimpact:geo:create

This will parse your RIS data file, extract the affiliation address fields, and for each address, if an address can be identified, try to determine the latitude and longitude of the address at city level. This will generate the html, JavaScript and data required to display the graphs of geographical collaboration networks.

All generated files will be saved to the path you specify when you run the task. Typically, if you follow the conventions, you would end up having this directory in your +public/results+ directory:
  public/results/your_project_name/geo

Again the directory is a self contained system. You can drop it on to any web server, and point your browser to the +index.html+ file to view it. If you want to use your Rails application to view it, make sure your Rails server is running, and point your browser to:
  http://your_rails_server_root_url/results/your_project_name/geo/index.html

===== Ambiguous US cities

Address ambiguity occurs if there are missing parts of the address in the data. For example, "New Haven, United States" could be any one of these:
  New Haven, Connecticut, United States
  New Haven, Indiana, United States
  New Haven, Michigan, United States

Such ambiguity is more likely to exist for United States addresses because a lot of authors omit state information in their addresses.

Rimpact will simply skip those addresses and will NOT try to make a disambiguation decision automatically. However, you can get a list of such skipped US addresses by running:
  rake rimpact:geo:check

This will generate a number of files in your results directory including the "ambiguous_cities.csv" file. You will need to manually disambiguate these cities. To do that, replace each line with the correct city and state information in this format:
  New Haven, CT
  Philadelphia, PA
  Anytown, AL

You only need to include the city and state (2-letter code uppercase), and you only need to include each city once.

After that, you can add these cities to your "preferred cities" list:
  rake rimpact:geo:preferred

This will help Rimpact make a decision next time when such ambiguity occurs. For example, next time when it sees "New Haven, United States", it will know that "New Haven, CT" is your preferred city among all the "New Havens" in the United States, and therefore it will map that address to "New Haven, Connecticut, United States".

After you update your preferred cities list, you should run this task again to update your graph:
  rake rimpact:geo:create


== License

This project rocks and uses MIT-LICENSE.